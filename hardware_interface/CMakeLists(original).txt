cmake_minimum_required(VERSION 3.10.0)
project(hardware_interface)

set(CMAKE_BUILD_TYPE Debug)
## Compile as C++11, supported in ROS Kinetic and newer
# add_compile_options(-std=c++11)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS roscpp trajectory_msgs sensor_msgs std_msgs)

catkin_package()

#add_library(pca9685lib STATIC src/PCA9685.cpp include/hw_interface.h)
#target_link_libraries()

include_directories(include ${catkin_INCLUDE_DIRS})

#include_directories(${PROJECT_NAME} PUBLIC PCA9685Lib)
add_executable(${PROJECT_NAME} src/hw_interface.cpp)

#add_subdirectory(PCA9685Lib)

#target_link_directories(${PROJECT_NAME} PRIVATE PCA9685Lib)

#add_executable(parrot src/hw_interface_demo.cpp)
#target_link_libraries(parrot ${catkin_LIBRARIES})

#add_library(pca9685lib STATIC PCA9685Lib/PCA9685.cpp PCA9685Lib/PCA9685.h)
#target_include_directories(${PROJECT_NAME} PUBLIC pca9685lib)
target_include_directories(${PROJECT_NAME} PUBLIC PCA9685Lib)
target_link_libraries(${PROJECT_NAME} pca9685lib)
target_link_libraries(${PROJECT_NAME} ${catkin_LIBRARIES})

#target_link_libraries(${PROJECT_NAME} PUBLIC pca9685lib)
#target_link_libraries(${PROJECT_NAME} pca9685lib) #library name (pca9685lib) should match with the name in the CMakeLists.txt file in the library's directory
